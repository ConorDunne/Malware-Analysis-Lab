resource "aws_network_interface" "network_interface_inetsim" {
  subnet_id       = aws_subnet.lab_subnet.id
  private_ips     = ["172.16.${var.lab_instance.index}.6"]
  security_groups = [var.security_groups.inetsim.id]

  tags = {
    Name = "${var.defaults.env}-${var.lab_instance.name}-inetsim-interface"
    Environment = "${var.defaults.env}"
  }
}

resource "aws_instance" "inetsim" {
  ami           = "ami-05e786af422f8082a"
  instance_type = "t3.small"

  network_interface {
    network_interface_id = aws_network_interface.network_interface_inetsim.id
    device_index         = 0
  }

  tags = {
    Name = "${var.defaults.env}-${var.lab_instance.name}-inetsim-ec2"
    Environment = "${var.defaults.env}"
  }

  user_data = <<-EOF
#!/bin/bash

sudo echo "deb http://www.inetsim.org/debian/ binary/" > /etc/apt/sources.list.d/inetsim.list
sudo echo "deb-src http://www.inetsim.org/debian/ source/" >> /etc/apt/sources.list.d/inetsim.list
sudo wget -O - https://www.inetsim.org/inetsim-archive-signing-key.asc | apt-key add -
sudo apt update -y
sudo apt install -y inetsim

# Configure INetSim to listen in all interfaces
sudo sed -i 's/^#service_bind_address.*/service_bind_address                 0.0.0.0/' /etc/inetsim/inetsim.conf

# Change DNS configuration from INetSim
sudo sed -i 's/^#dns_default_ip.*/dns_default_ip                 172.16.${var.lab_instance.index}.6/' /etc/inetsim/inetsim.conf

# Stop systemd-resolved so INetSim can listen for DNS requests
sudo systemctl stop systemd-resolved

# Restart INetSim to apply the configuration changes
sudo service inetsim restart
  EOF
}
